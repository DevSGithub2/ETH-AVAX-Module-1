// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SimpleContract {
    uint256 public value;

    // Function that uses require() to check a condition
    function setValue(uint256 _value) public {
        require(_value > 0, "Value must be greater than zero");
        value = _value;
    }

    // Function that uses assert() to ensure internal consistency
    function doubleValue() public view returns (uint256) {
        assert(value > 0);
        return value * 2;
    }

    // Function that uses revert() to stop execution under a condition
    function resetValue() public {
        if (value == 0) {
            revert("Value is already zero");
        }
        value = 0;
    }
}
